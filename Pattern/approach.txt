-> 2-Forest Problem 

# Approach to Solve the Problem

1. Input:
    > Read the integer N which represents the size of the pattern.

2. Generate the Pattern:

    > Use a loop to iterate from 1 to N.
    > For each iteration i, print i stars, separated by spaces.
    > Ensure that each row ends with a newline character for proper formatting.

3. Edge Cases:

    > If N is 1, the output should be just one star.
    > Make sure the code handles cases where N is larger correctly by printing the appropriate number of stars per row.


------------------------------------------------------------------------------------------------------------------------------

-> N-Forest Problem 

# Approach to Solve the Problem

1. Input:

    > Read the integer N, which specifies the size of the grid.

2. Generate the Pattern:

    > Use a loop to iterate N times to create each row.
    > In each iteration, construct a string that contains N stars separated by spaces.
    > Print each row.

3. Edge Cases:

    > Handle small values of N like 1 to ensure the pattern is correct.
    > Ensure that the output format matches exactly with the given requirements (correct spacing and newlines).

------------------------------------------------------------------------------------------------------------------------------

-> N-Triangles Problem

# Approach to Solve the Problem

1. Input:

    > Read the integer N, which specifies the number of rows in the triangle.

2. Generate the Pattern:

    > Use a loop to iterate from 1 to N. Each iteration corresponds to a row in the pattern.
    > For each row i, generate a sequence of integers from 1 to i.
    > Convert these integers into a string with each integer separated by a space.

3. Print the Pattern:

    > Print each row of the triangle as you generate it.

------------------------------------------------------------------------------------------------------------------------------

-> Reverse Number Triangle Problem

# Approach to Solve the Problem

1. Input:

    > Read the integer N, which specifies the number of rows in the triangle.

2. Generate the Pattern:

    > Use a loop to iterate from N down to 1. Each iteration corresponds to a row in the pattern.
    > For each row i, generate a sequence of integers from 1 to i.
    > Convert these integers into a string with each integer separated by a space.

3. Print the Pattern:

    > Print each row of the triangle as you generate it.

------------------------------------------------------------------------------------------------------------------------------

-> Seeding Problem

# pproach to Solve the Problem

1. Input:

    > Read the integer N, which specifies the size of the grid.

2. Generate the Pattern:

    > Use a loop to iterate from 1 to N. Each iteration corresponds to a row in the pattern.
    > For each row i, generate N-i+1 stars (*). This represents the decreasing number of stars in each subsequent row.
    > Convert these stars into a string with each star separated by a space.

3. Print the Pattern:

    > Print each row of the pattern as you generate it.

--------------------------------------------------------------------------------------------------------------------------------

-> Triangle Problem 

# Approach to Solve the Problem

1. Input:

    > Read the integer N, which specifies the number of rows in the triangle.

2. Generate the Pattern:

    > Use a loop to iterate from 1 to N. Each iteration corresponds to a row in the pattern.
    > For each row i, generate a sequence where each number is the row index i and appears i times.
    > Convert these numbers into a string with each number separated by a space.

3. Print the Pattern:

    > Print each row of the triangle as you generate it.

---------------------------------------------------------xx--------------------------------------------------------------------